name: "deploy"

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Create .env.local file
        run: |
          cat <<EOF > .env.local
          NEXT_PUBLIC_API_URL="${{ secrets.NEXT_PUBLIC_API_URL }}"
          NEXT_PUBLIC_KEYCLOAK_REALM="${{ secrets.NEXT_PUBLIC_KEYCLOAK_REALM }}"
          NEXTAUTH_URL="${{ secrets.NEXTAUTH_URL }}"
          NEXTAUTH_SECRET="${{ secrets.NEXTAUTH_SECRET }}"
          KEYCLOAK_ISSUER="${{ secrets.KEYCLOAK_ISSUER }}"
          KEYCLOAK_CLIENT_ID="${{ secrets.KEYCLOAK_CLIENT_ID }}"
          KEYCLOAK_CLIENT_SECRET="${{ secrets.KEYCLOAK_CLIENT_SECRET }}"
          EOF
          echo "âœ… .env.local file created!"

      - name: Login to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/elimika-ui
          docker build -t $IMAGE_NAME:latest -f docker/Dockerfile .
          docker push $IMAGE_NAME:latest

  setup_server:
    name: Setup Server
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup SSH Connection & Configure Server
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > private_key
          chmod 600 private_key

          ssh -i private_key -o StrictHostKeyChecking=no "${{ secrets.SERVER_SSH_USER }}@${{ secrets.SERVER_IP }}" <<-EOF
            set -e  # Exit on error

            echo "ðŸ“‚ Ensuring deployment directory exists..."
            mkdir -p ~/products/elimika-ui/docker

            echo "ðŸ“„ Creating docker-compose.yaml..."
            cat > ~/products/elimika-ui/docker/compose.yaml <<- EOF
            version: "3.8"

            services:
              app:
                container_name: elimika-ui
                image: ghcr.io/${{ github.repository_owner }}/elimika-ui:latest
                ports:
                  - "3000:3000"
                env_file:
                  - ../.env.local
                restart: always
          EOF

  deploy:
    name: Deploy to Self-Hosted Server
    runs-on: ubuntu-latest
    needs: setup_server

    steps:
      - name: Setup SSH Connection & Deploy
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > private_key
          chmod 600 private_key

          ssh -i private_key -o StrictHostKeyChecking=no "${{ secrets.SERVER_SSH_USER }}@${{ secrets.SERVER_IP }}" <<'EOF'
            set -e  # Exit script on error

            echo "ðŸ”‘ Logging in to GitHub Container Registry..."
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

            echo "ðŸš€ Pulling latest Docker image..."
            cd ~/products/elimika-ui/docker
            docker compose -f compose.yaml pull

            echo "ðŸš€ Restarting the application..."
            docker compose -f compose.yaml up -d --no-deps --build

            echo "ðŸ§¹ Cleaning up old Docker images..."
            docker system prune -af

            echo "âœ… Deployment complete!"
          EOF
